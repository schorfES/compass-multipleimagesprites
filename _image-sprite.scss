// Create multiple sprites for regular displays and retina-displays:
// -----------------------------------------------------------------------------
@import "compass/css3/background-size";

// When set to true, a fix for compass is added to find the defined sprite
// sheets path, this bug should be fixed upcoming compass versions:
$image-sprite-compass-fix: true !default;

// When set to true, the fix for respondjs on older IE's will be activated:
$image-sprite-support-respondjs: false !default;

// Support transparencies for older IE versions (IE7 and IE8)
$image-sprite-support-old-ie: false !default;

// Folder name for non retina images:
$image-sprite-path-default: "default/" !default;

// Folder name for retina images:
$image-sprite-path-retina: "retina/" !default;

// File pattern for images to be added into the sprite sheet:
$image-sprite-files: "*.png" !default;

// List with nested lists as key value pair for "key" and "path" to define
// multiple sprite sheets / sprite sheet sources:
$image-sprite-urls: () !default;

// Returns the registered sprite config by the given key
@function image-sprite-getregisteredsprite($key) {
	@for $i from 1 through length($image-sprite-urls) {
		$value: nth($image-sprite-urls, $i);
		@if nth($value, 1) == $key {
			@return $value;
		}
	}

	@return null;
}

// Returns the full path of the default images:
@function image-sprite-getdefaultpath($path) {
	@return "#{$path}#{$image-sprite-path-default}#{$image-sprite-files}";
}

// Returns the full path of the retina images:
@function image-sprite-getretinapath($path) {
	@return "#{$path}#{$image-sprite-path-retina}#{$image-sprite-files}";
}

// Adds a key value pair of "key" and "path" to the urls list:
@mixin image-sprite-addurl($key, $path) {
	$default: image-sprite-getdefaultpath($path);
	$retina: image-sprite-getretinapath($path);
	$map: sprite-map($default);
	$map-retina: sprite-map($retina);
	$url: sprite-url($map);
	$url-retina: sprite-url($map-retina);

	// Store data for the current sprite sheet in a list:
	// 1st: key
	// 2nd: path
	// 3rd: map (default)
	// 4th: map for retina resoulutions
	// 5th: sprite url (default)
	// 6th: sprite retina url
	$value: $key $path $map $map-retina $url $url-retina;
	$image-sprite-urls: append($image-sprite-urls, $value, "comma") !global;

	// Fixes a bug with compass where sprite images are not found:
	@if ($image-sprite-compass-fix) {
		.image-sprite-compass-fix {
			background: $url;
			background: $url-retina;
		}
	}
}

// Builds the final output for non retina and retina devices:
@mixin image-sprite($key, $name, $dimensions: false) {
	$sprite: image-sprite-getregisteredsprite($key);
	$path: nth($sprite, 2);
	$map: nth($sprite, 3);
	$map-retina: nth($sprite, 4);
	$url: nth($sprite, 5);
	$url-retina: nth($sprite, 6);

	$xpos: 0;
	$ypos: nth(sprite-position($map-retina, $name), 2) / 2;
	$retina-width: image-width(sprite-path($map-retina)) / 2;
	$retina-height: image-height(sprite-path($map-retina)) / 2;

	@if ($dimensions) {
		height: image-height(sprite-file($map, $name));
		width: image-width(sprite-file($map, $name));
	}

	background-image: $url;
	background-position: $xpos nth(sprite-position($map, $name), 2);
	background-repeat: no-repeat;

	@if ($image-sprite-support-old-ie) {
		// IE7 and IE8 AlphaImageLoader filter fix:
		filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(sizingMethod='crop');
	}

	@media
		only screen and (-webkit-min-device-pixel-ratio: 1.5),
		only screen and (min--moz-device-pixel-ratio: 1.5),
		only screen and (-moz-min-device-pixel-ratio: 1.5),
		only screen and (-ms-min-device-pixel-ratio: 1.5),
		only screen and (-o-min-device-pixel-ratio: 1.5/1),
		only screen and (min-device-pixel-ratio: 1.5),
		only screen and (min-resolution: 2dppx) {

		background-image: $url-retina;
		background-position: $xpos $ypos;
		@include background-size($retina-width $retina-height);
	}

	@if ($image-sprite-support-respondjs) {
		// Fix for to display retina images on IE8 with respond.js
		// URL of solution:
		// http://stackoverflow.com/questions/9006583/how-do-i-prevent-respond-js-reading-my-retina-display-media-query */

		@media (-webkit-useless-fake-property: 2) {
			background-image: $url;
			background-position: $xpos nth(sprite-position($map, $name), 2);
			background-size: auto auto;
		}
	}
}
